// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **

import {Root, Message} from 'protobufjs'; // respectively "./node_modules/protobufjs"
import * as CustomerRecord from './customer_record';
import customerRecordProtoJson = require('./customer_record.json');

export class CustomerRecordMessage extends Message<CustomerRecordMessage> {
  private _customer_name: string | null | undefined =
    'Please set a customer name';
  private _row_num: number | Long;

  constructor(rowNum: number | Long, customerName?: string | null | undefined) {
    super();
    this._row_num = rowNum;
    this._customer_name = customerName || this._customer_name;
  }
  getCustomerName(): string | null | undefined {
    return this._customer_name;
  }

  setCustomerName(customerName: string | null | undefined): void {
    this._customer_name = customerName;
  }

  getRowNum(): number | Long {
    return this._row_num;
  }

  setRowNum(rowNum: number | Long) {
    this._row_num = rowNum;
  }

  createCustomerRecord(): Message<CustomerRecordMessage> {
    const root = Root.fromJSON(customerRecordProtoJson);
    if (!root) {
      throw Error('Proto must not be undefined');
    }

    const CustomerRecordProto = root.lookupType(
      'customer_record.CustomerRecord'
    );
    const newCustomerRecord: CustomerRecord.customer_record.ICustomerRecord = {
      customerName: this.getCustomerName(),
      rowNum: this.getRowNum(),
    };
    const customerRecordErrMsg = CustomerRecordProto.verify(newCustomerRecord);
    if (customerRecordErrMsg) {
      throw Error(customerRecordErrMsg);
    }

    const customerRecordMsg = CustomerRecordProto.create(newCustomerRecord);
    return customerRecordMsg;
  }
}
